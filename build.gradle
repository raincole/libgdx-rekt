/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'raincole' at '1/23/17 12:29 AM' with Gradle 3.0
 *
 * This generated file contains a sample Java project to get you started.
 * For more 2.14.1-all.zipdetails take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.0/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'kotlin'

buildscript {
    repositories {
        mavenCentral()
        maven {
            url 'https://dl.bintray.com/kotlin/kotlin-dev'
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.1.0-beta-17"
    }
}

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

compileJava {
    def libgdxRektProps = new Properties()
    file("libgdx-rekt.properties").withInputStream {
        stream -> libgdxRektProps.load(stream)
    }
    println "${libgdxRektProps['rtPath']}"
    if (sourceCompatibility == '1.6') {
        options.bootClasspath = "${libgdxRektProps['rtPath']}"
        // use the line above as an example to add jce.jar
        // and other specific JDK jars
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}


